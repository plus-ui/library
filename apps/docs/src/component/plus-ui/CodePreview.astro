---
import { Tabs, TabItem } from "@astrojs/starlight/components";

interface Props {
  title?: string;
  className?: string;
  id?: string;
  horizontal?: boolean;
  showCodeSandbox?: boolean;
  showCodeButton?: boolean;
  showCode?: boolean;
}

const {
  title,
  className,
  id = "preview-" + Math.random().toString(36).substring(2, 15),
  horizontal = false,
  showCodeSandbox = false,
  showCodeButton = true,
  showCode = false,
} = Astro.props;

// <CodePreview horizontal>
// <slot slot="preview"></slot>
// <div slot="html"></div>
// <div slot="react"></div>
// <div slot="angular"></div>
// <div slot="vue"></div>
// <div slot="svelte"></div>
// </CodePreview>
---

<div
  class={`not-content bg-color-default-default px-4 pt-4 pb-2 flex flex-col gap-2 rounded ${className}`}
>
  <div class="bg-color-surface p-2 rounded flex flex-col gap-6 group/preview">
    <div class="flex justify-end h-6 invisible group-hover/preview:visible">
      {
        showCodeSandbox && (
          <plus-tooltip orientation="left" message="View in CodeSandbox">
            <plus-button kind="text">
              <span class="text-color-placeholder">
                <i class="fa-solid fa-up-right-from-square" />
              </span>
            </plus-button>
          </plus-tooltip>
        )
      }
    </div>
    <div
      class={horizontal
        ? "flex flex-row gap-4 items-center justify-center mb-12"
        : "flex flex-col gap-4 items-center justify-center mb-12"}
    >
      <slot name="preview" />
    </div>
  </div>
  <div class="flex flex-col gap-2 w-full">
    <plus-button
      kind="text"
      size="sm"
      class="w-full"
      full-width="true"
      id={`toggle-button-${id}`}
    >
      <div class="flex flex-row gap-2 items-center justify-between w-25">
        <span id={`toggle-text-${id}`}>Show code</span>
        <i id={`toggle-icon-${id}`} class="fa-solid fa-chevron-down"></i>
      </div>
    </plus-button>
    <div id={`code-section-${id}`} class="hidden mt-4 mb-2">
      <Tabs syncKey="code-tab">
        <TabItem label="React">
          <slot name="react" />
        </TabItem>
        <TabItem label="Angular">
          <slot name="angular" />
        </TabItem>
        <TabItem label="Vue">
          <slot name="vue" />
        </TabItem>
        <TabItem label="Svelte">
          <slot name="svelte" />
        </TabItem>
        <TabItem label="HTML">
          <slot name="html" />
        </TabItem>
      </Tabs>
    </div>
  </div>
</div>

<script define:vars={{ id }}>
  // Client-side script for interactivity
  const toggleButton = document.getElementById(`toggle-button-${id}`);
  const toggleIcon = document.getElementById(`toggle-icon-${id}`);
  const toggleText = document.getElementById(`toggle-text-${id}`);
  const codeSection = document.getElementById(`code-section-${id}`);

  let isCodeVisible = false;

  const toggleCode = () => {
    isCodeVisible = !isCodeVisible;

    if (isCodeVisible) {
      codeSection.classList.remove("hidden");
      toggleIcon.className = "fa-solid fa-chevron-up";
      toggleText.textContent = "Hide code";
    } else {
      codeSection.classList.add("hidden");
      toggleIcon.className = "fa-solid fa-chevron-down";
      toggleText.textContent = "Show code";
    }
  };

  // Event listener for the plus-button
  toggleButton.addEventListener("plus-click", toggleCode);
</script>
